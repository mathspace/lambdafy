# Commented out items are optional. Rest are required.

# name is used for AWS resources and to uniquely identify the app
# Using the same name in the same AWS account and region will result in
# conflict and overwriting behavior.
# If your app has different stages (e.g. staging,production), create two
# spec files with different names (e.g. my-great-app-staging,
# my-great-app-production). Essentially, treat each stage as a separate
# app. Same for environments or variations of your app.
name: my-great-app

# Docker image to use. The image must handle lambda API Gateway
# requests. `lambdafy make` command can be used to convert any HTTP
# server based docker image to a lambda compatible image (while
# maintaining its original behavior when run outside of lambda runtime).
image: nginx

# role is the name of a IAM role.
# Run `lambdafy example-role` to see terraform definition for a basic
# role needed to run the lambda function.
role: my-great-app-role
# env defines the environmental variables available to the app. The
# values follow the format for https://pkg.go.dev/github.com/oxplot/starenv
# In short:
# - Values starting with asterisk (*) are treated specially.
# - All other values are treated as literals.
#
# env:
#   LAMBDAFY_PROXY_LOGGING: verbose  # Turns on verbose logging of requests
#   FOO: "bar"
#   ABC: "123"
#   API_KEY: "*ssm:/my-great-app/key"
#   CONFIG: "*s3:app-bucket/path/to/config"

# entrypoint is analogous to Dockerfile ENTRYPOINT directive. Specifying
# it will override the existing ENTRYPOINT in the docker image.
#
# entrypoint:
#   - /bin/sh
#   - -c

# command is analogous to Dockerfile CMD directive. Specifying it will
# override the existing CMD in the docker image.
#
# command:
#  - /my-great-app $FOO --key=$API_KEY

# memory specifies the amount of RAM available to lambda function in
# MBs. Defatuls to 128 and can be up to 10240 in 1 increments.
#
# memory: 512

# timeout specifies the maximum amount of time in seconds the lambda
# function is allowed to run. Defaults to 3 and can be up to 900 in 1
# second increments.
#
# timeout: 30

# tags will be applied to the function as regular AWS resource tags.
# Tag `Name` will be applied by default set to the function name defined
# above. It can be overriden here.
#
# tags:
#   environment: production
#   team: data-science

# temp_size is the amount of temporary/ephemeral storage available to
# each invokation of the function in MB. Defaults to 512.
#
# temp_size: 1024

# efs_mounts is the list of AWS Elastic File System mounts.
#
# efs_mounts:
#   - arn: ...             # EFS endpoint ARN
#     path: /mnt/database  # Mount path inside the function

# Needed to allow the function to talk to resources running inside a
# VPC.
#
# vpc_security_group_ids:
#   - "sg-1234678"
#   - "sg-6573452"
# vpc_subnet_ids:
#   - "34623423"

# allowed_account_regions is a list of account:region that specify which
# AWS account and region combinations are allowed to be deployed to.
# This ensures accidental overwrites do not happen. Wildcards can be
# used for both account and region parts.
# If unspecified, all regions and all accounts are allowed.
#
# allowed_account_regions:
#   - "*:us-*"  # any account and us regions
#   - "123456789:ap-southeast-2"  # specific region of specific account
